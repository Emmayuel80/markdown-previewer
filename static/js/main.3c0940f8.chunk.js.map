{"version":3,"sources":["Components/Editor.js","Components/Preview.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","width","padding","spacing","paper","Editor","props","classes","className","Paper","elevation","TextField","id","label","multiline","rows","variant","value","markdown","onChange","handleMarkdown","marked","setOptions","breaks","renderer","Renderer","flexWrap","margin","SimplePaper","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","placeholder","App","React","useState","setMarkdown","useEffect","event","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAKMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,eAAgB,SAChB,uBAAwB,CACpBC,MAAO,QAEXC,QAASL,EAAMM,QAAQ,IAEzBC,MAAO,CACHH,MAAO,OACPC,QAASL,EAAMM,QAAQ,QAId,SAASE,EAAOC,GAC7B,IAAMC,EAAUZ,IAEhB,OACE,qBAAKa,UAAWD,EAAQT,KAAxB,SACE,cAACW,EAAA,EAAD,CAAOC,UAAW,EAAGF,UAAWD,EAAQH,MAAxC,SACE,cAACO,EAAA,EAAD,CACEC,GAAG,SACHC,MAAM,SACNC,WAAS,EACTC,KAAM,GACNC,QAAQ,WACRC,MAAOX,EAAMY,SACbC,SAAUb,EAAMc,qB,sCC5B1BC,IAAOC,WAAW,CACdC,QAAQ,IAEZ,IAAMC,EAAW,IAAIH,IAAOI,SACtB9B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACT2B,SAAU,OACV1B,eAAgB,SAChB2B,OAAQ9B,EAAMM,QAAQ,IAGxBC,MAAO,CACLF,QAASL,EAAMM,QAAQ,QAIZ,SAASyB,EAAYtB,GAClC,IAAMC,EAAUZ,IAEhB,OACE,qBAAKa,UAAWD,EAAQT,KAAxB,SACE,cAACW,EAAA,EAAD,CAAOC,UAAW,EAAGF,UAAWD,EAAQH,MAAxC,SACE,qBACEQ,GAAG,UACHJ,UAAU,UACVqB,wBAAyB,CACvBC,OAAQC,IAAUC,SAASX,IAAOf,EAAMY,SAAU,CAAEM,SAAUA,YCb1E,IAAMS,EAAW,qmCA4CFC,EA3Df,WAAgB,IAAD,EACmBC,IAAMC,SAAS,IADlC,mBACNlB,EADM,KACImB,EADJ,KAQb,OAHAC,qBAAU,WACRD,EAAYJ,KACX,IAED,sBAAKzB,UAAU,MAAf,UACE,cAACH,EAAD,CAAQa,SAAUA,EAAUE,eART,SAACmB,GACtBF,EAAYE,EAAMC,OAAOvB,UAQvB,cAAC,EAAD,CAASC,SAAUA,QCHVuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3c0940f8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    '& .MuiTextField-root': {\r\n        width: '100%'\r\n    },\r\n    padding: theme.spacing(1)\r\n  },\r\n  paper: {\r\n      width: '100%',\r\n      padding: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function Editor(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper elevation={3} className={classes.paper}>\r\n        <TextField\r\n          id=\"editor\"\r\n          label=\"Editor\"\r\n          multiline\r\n          rows={10}\r\n          variant=\"outlined\"\r\n          value={props.markdown}\r\n          onChange={props.handleMarkdown}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DOMPurify from \"dompurify\";\r\nimport marked from \"marked\";\r\nmarked.setOptions({\r\n    breaks: true\r\n  });\r\nconst renderer = new marked.Renderer();\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n    margin: theme.spacing(2),\r\n    \r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default function SimplePaper(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper elevation={3} className={classes.paper}>\r\n        <div\r\n          id=\"preview\"\r\n          className=\"content\"\r\n          dangerouslySetInnerHTML={{\r\n            __html: DOMPurify.sanitize(marked(props.markdown, { renderer: renderer })),\r\n          }}\r\n        ></div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport Editor from './Components/Editor';\nimport Preview from './Components/Preview';\nfunction App() {\n  const [markdown, setMarkdown] = React.useState('');\n  const handleMarkdown = (event) => {\n    setMarkdown(event.target.value);\n  };\n  useEffect(() => {\n    setMarkdown(placeholder)\n  }, [])\n  return (\n    <div className=\"App\">\n      <Editor markdown={markdown} handleMarkdown={handleMarkdown}/>\n      <Preview markdown={markdown}></Preview>\n    </div>\n  );\n}\nconst placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`;\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}